-- MySQL Script generated by MySQL Workbench
-- Tue Jun 14 10:26:35 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema CosmosManager
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `CosmosManager` ;

-- -----------------------------------------------------
-- Schema CosmosManager
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CosmosManager` DEFAULT CHARACTER SET utf8 ;
USE `CosmosManager` ;

-- -----------------------------------------------------
-- Table `CosmosManager`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`User` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(30) NOT NULL,
  `firstName` VARCHAR(255) NOT NULL,
  `lastName` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(20) NULL,
  `gender` TINYINT(1) NULL,
  `birthday` DATE NULL,
  `photoPath` VARCHAR(255) NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`idUser`));

CREATE UNIQUE INDEX `user_email_UNIQUE` ON `CosmosManager`.`User` (`email` ASC) VISIBLE;

CREATE UNIQUE INDEX `user_phone_UNIQUE` ON `CosmosManager`.`User` (`phone` ASC) VISIBLE;

CREATE INDEX `user_first_name_idx` ON `CosmosManager`.`User` (`firstName` ASC) VISIBLE;

CREATE INDEX `user_last_name_idx` ON `CosmosManager`.`User` (`lastName` ASC) VISIBLE;

CREATE INDEX `user_last_name_first_name_idx` ON `CosmosManager`.`User` (`lastName` ASC, `firstName` ASC) VISIBLE;

CREATE INDEX `user_creation_date_idx` ON `CosmosManager`.`User` (`creationDate` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Address` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Address` (
  `idAddress` INT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(255) NOT NULL,
  `postalCode` VARCHAR(5) NOT NULL,
  `city` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idAddress`));

CREATE INDEX `address_street` ON `CosmosManager`.`Address` (`street` ASC) VISIBLE;

CREATE INDEX `address_postal_code` ON `CosmosManager`.`Address` (`postalCode` ASC) VISIBLE;

CREATE INDEX `address_city` ON `CosmosManager`.`Address` (`city` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Scope`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Scope` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Scope` (
  `idScope` INT NOT NULL AUTO_INCREMENT,
  `scopeType` VARCHAR(1) NOT NULL,
  PRIMARY KEY (`idScope`));


-- -----------------------------------------------------
-- Table `CosmosManager`.`TaskStatusModel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TaskStatusModel` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TaskStatusModel` (
  `idTaskStatusModel` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`idTaskStatusModel`));

CREATE INDEX `task_status_model_name_idx` ON `CosmosManager`.`TaskStatusModel` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Workspace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Workspace` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Workspace` (
  `idWorkspace` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `photoPath` VARCHAR(255) NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `userOwner` INT NOT NULL,
  `defaultTaskStatusModel` INT NOT NULL,
  PRIMARY KEY (`idWorkspace`),
  CONSTRAINT `fk_Workspace_Scope`
    FOREIGN KEY (`idWorkspace`)
    REFERENCES `CosmosManager`.`Scope` (`idScope`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Workspace_User`
    FOREIGN KEY (`userOwner`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Workspace_TaskStatusModel`
    FOREIGN KEY (`defaultTaskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Workspace_User_idx` ON `CosmosManager`.`Workspace` (`userOwner` ASC) VISIBLE;

CREATE UNIQUE INDEX `workspace_user_name_UNIQUE` ON `CosmosManager`.`Workspace` (`userOwner` ASC, `name` ASC) VISIBLE;

CREATE INDEX `workspace_user_creation_date_idx` ON `CosmosManager`.`Workspace` (`userOwner` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `fk_Workspace_TaskStatusModel_idx` ON `CosmosManager`.`Workspace` (`defaultTaskStatusModel` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`UserWorkInWorkspace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`UserWorkInWorkspace` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`UserWorkInWorkspace` (
  `idUser` INT NOT NULL,
  `idWorkspace` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idWorkspace`),
  CONSTRAINT `fk_User_has_Workspace_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Workspace_Workspace`
    FOREIGN KEY (`idWorkspace`)
    REFERENCES `CosmosManager`.`Workspace` (`idWorkspace`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_User_has_Workspace_Workspace_idx` ON `CosmosManager`.`UserWorkInWorkspace` (`idWorkspace` ASC) VISIBLE;

CREATE INDEX `fk_User_has_Workspace_User_idx` ON `CosmosManager`.`UserWorkInWorkspace` (`idUser` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Team` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Team` (
  `idTeam` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `photoPath` VARCHAR(255) NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `manager` INT NOT NULL,
  `workspace` INT NOT NULL,
  PRIMARY KEY (`idTeam`),
  CONSTRAINT `fk_Team_Scope`
    FOREIGN KEY (`idTeam`)
    REFERENCES `CosmosManager`.`Scope` (`idScope`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Team_User`
    FOREIGN KEY (`manager`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Team_Workspace`
    FOREIGN KEY (`workspace`)
    REFERENCES `CosmosManager`.`Workspace` (`idWorkspace`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Team_User_idx` ON `CosmosManager`.`Team` (`manager` ASC) VISIBLE;

CREATE INDEX `fk_Team_Workspace_idx` ON `CosmosManager`.`Team` (`workspace` ASC) VISIBLE;

CREATE UNIQUE INDEX `team_workspace_name_UNIQUE` ON `CosmosManager`.`Team` (`workspace` ASC, `name` ASC) VISIBLE;

CREATE INDEX `team_workspace_creation_date_idx` ON `CosmosManager`.`Team` (`workspace` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `team_workspace_manager_idx` ON `CosmosManager`.`Team` (`workspace` ASC, `manager` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`UserAddresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`UserAddresses` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`UserAddresses` (
  `idUser` INT NOT NULL,
  `idAddress` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idAddress`),
  CONSTRAINT `fk_User_has_Address_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Address_Address`
    FOREIGN KEY (`idAddress`)
    REFERENCES `CosmosManager`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_User_has_Address_Address_idx` ON `CosmosManager`.`UserAddresses` (`idAddress` ASC) VISIBLE;

CREATE INDEX `fk_User_has_Address_User_idx` ON `CosmosManager`.`UserAddresses` (`idUser` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`TeamMembers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TeamMembers` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TeamMembers` (
  `idTeam` INT NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`idTeam`, `idUser`),
  CONSTRAINT `fk_Team_Members_Team`
    FOREIGN KEY (`idTeam`)
    REFERENCES `CosmosManager`.`Team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Team_Members_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Team_Members_User_idx` ON `CosmosManager`.`TeamMembers` (`idUser` ASC) VISIBLE;

CREATE INDEX `fk_Team_Members_Team_idx` ON `CosmosManager`.`TeamMembers` (`idTeam` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Privilege`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Privilege` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Privilege` (
  `idPrivilege` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `scope` INT NOT NULL,
  PRIMARY KEY (`idPrivilege`),
  CONSTRAINT `fk_Privilege_Scope`
    FOREIGN KEY (`scope`)
    REFERENCES `CosmosManager`.`Scope` (`idScope`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Privilege_Scope_idx` ON `CosmosManager`.`Privilege` (`scope` ASC) VISIBLE;

CREATE UNIQUE INDEX `privilege_scope_name` ON `CosmosManager`.`Privilege` (`scope` ASC, `name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Role` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Role` (
  `idRole` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `administratorRole` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `scope` INT NOT NULL,
  PRIMARY KEY (`idRole`),
  CONSTRAINT `fk_Role_Scope`
    FOREIGN KEY (`scope`)
    REFERENCES `CosmosManager`.`Scope` (`idScope`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE UNIQUE INDEX `role_scope_name_idx` ON `CosmosManager`.`Role` (`scope` ASC, `name` ASC) VISIBLE;

CREATE INDEX `fk_Role_Scope_idx` ON `CosmosManager`.`Role` (`scope` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`RolePrivileges`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`RolePrivileges` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`RolePrivileges` (
  `idRole` INT NOT NULL,
  `idPrivilege` INT NOT NULL,
  PRIMARY KEY (`idRole`, `idPrivilege`),
  CONSTRAINT `fk_Role_Privileges_Role`
    FOREIGN KEY (`idRole`)
    REFERENCES `CosmosManager`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Role_Privileges_Privilege`
    FOREIGN KEY (`idPrivilege`)
    REFERENCES `CosmosManager`.`Privilege` (`idPrivilege`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Role_Privileges_Privilege_idx` ON `CosmosManager`.`RolePrivileges` (`idPrivilege` ASC) VISIBLE;

CREATE INDEX `fk_Role_Privileges_Role_idx` ON `CosmosManager`.`RolePrivileges` (`idRole` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`UserRoles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`UserRoles` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`UserRoles` (
  `User_idUser` INT NOT NULL,
  `Role_idRole` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Role_idRole`),
  CONSTRAINT `fk_User_Roles_User`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Roles_Role`
    FOREIGN KEY (`Role_idRole`)
    REFERENCES `CosmosManager`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_User_Roles_Role_idx` ON `CosmosManager`.`UserRoles` (`Role_idRole` ASC) VISIBLE;

CREATE INDEX `fk_User_Roles_User_idx` ON `CosmosManager`.`UserRoles` (`User_idUser` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Project` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Project` (
  `idProject` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `beginDate` DATE NULL,
  `dueDate` DATE NULL,
  `estimatedTime` INT UNSIGNED NULL,
  `achived` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `closed` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `workspace` INT NOT NULL,
  PRIMARY KEY (`idProject`, `name`),
  CONSTRAINT `fk_Project_Scope`
    FOREIGN KEY (`idProject`)
    REFERENCES `CosmosManager`.`Scope` (`idScope`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_Workspace1`
    FOREIGN KEY (`workspace`)
    REFERENCES `CosmosManager`.`Workspace` (`idWorkspace`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Project_Scope_idx` ON `CosmosManager`.`Project` (`idProject` ASC) VISIBLE;

CREATE INDEX `fk_Project_Workspace_idx` ON `CosmosManager`.`Project` (`workspace` ASC) VISIBLE;

CREATE UNIQUE INDEX `project_workspace_name_UNIQUE` ON `CosmosManager`.`Project` (`workspace` ASC, `name` ASC) VISIBLE;

CREATE INDEX `project_workspace_creation_date_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `project_workspace_begin_date_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `beginDate` ASC) VISIBLE;

CREATE INDEX `project_workspace_due_date_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `dueDate` ASC) VISIBLE;

CREATE INDEX `project_worskapce_estimated_time_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `estimatedTime` ASC) VISIBLE;

CREATE INDEX `project_workspace_achived_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `achived` ASC) VISIBLE;

CREATE INDEX `project_workspace_closed_idx` ON `CosmosManager`.`Project` (`workspace` ASC, `achived` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Delivery`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Delivery` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Delivery` (
  `idDelivery` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `deliverySpecification` TEXT NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `dueDate` DATE NULL,
  `completed` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `closed` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `project` INT NOT NULL,
  PRIMARY KEY (`idDelivery`),
  CONSTRAINT `fk_Delivery_Project`
    FOREIGN KEY (`project`)
    REFERENCES `CosmosManager`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Delivery_Project_idx` ON `CosmosManager`.`Delivery` (`project` ASC) VISIBLE;

CREATE UNIQUE INDEX `delivery_project_name_UNIQUE` ON `CosmosManager`.`Delivery` (`project` ASC, `name` ASC) VISIBLE;

CREATE INDEX `delivery_project_creation_date_idx` ON `CosmosManager`.`Delivery` (`project` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `delivery_project_closed_idx` ON `CosmosManager`.`Delivery` (`project` ASC, `closed` ASC) VISIBLE;

CREATE INDEX `delivery_project_completed_idx` ON `CosmosManager`.`Delivery` (`project` ASC, `completed` ASC) VISIBLE;

CREATE INDEX `delivery_project_due_date_idx` ON `CosmosManager`.`Delivery` (`project` ASC, `dueDate` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`File`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`File` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`File` (
  `idFile` INT NOT NULL AUTO_INCREMENT,
  `filePath` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idFile`));


-- -----------------------------------------------------
-- Table `CosmosManager`.`DeliveryAssociatedFiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`DeliveryAssociatedFiles` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`DeliveryAssociatedFiles` (
  `idDelivery` INT NOT NULL,
  `idFile` INT NOT NULL,
  PRIMARY KEY (`idDelivery`, `idFile`),
  CONSTRAINT `fk_Delivery_Associated_Files_Delivery`
    FOREIGN KEY (`idDelivery`)
    REFERENCES `CosmosManager`.`Delivery` (`idDelivery`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Delivery_Associated_Files_File`
    FOREIGN KEY (`idFile`)
    REFERENCES `CosmosManager`.`File` (`idFile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Delivery_Associated_Files_File_idx` ON `CosmosManager`.`DeliveryAssociatedFiles` (`idFile` ASC) VISIBLE;

CREATE INDEX `fk_Delivery_Associated_Files_Delivery_idx` ON `CosmosManager`.`DeliveryAssociatedFiles` (`idDelivery` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`TaskStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TaskStatus` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TaskStatus` (
  `idTaskStatus` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `color` INT NOT NULL,
  `previous` INT NULL,
  `next` INT NULL,
  `taskStatusModel` INT NOT NULL,
  PRIMARY KEY (`idTaskStatus`),
  CONSTRAINT `fk_TaskStatus_Previous`
    FOREIGN KEY (`previous`)
    REFERENCES `CosmosManager`.`TaskStatus` (`idTaskStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TaskStatus_Next`
    FOREIGN KEY (`next`)
    REFERENCES `CosmosManager`.`TaskStatus` (`idTaskStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TaskStatus_TaskStatusModel`
    FOREIGN KEY (`taskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_TaskStatus_Previous_idx` ON `CosmosManager`.`TaskStatus` (`previous` ASC) VISIBLE;

CREATE INDEX `fk_TaskStatus_Next_idx` ON `CosmosManager`.`TaskStatus` (`next` ASC) VISIBLE;

CREATE INDEX `fk_TaskStatus_TaskStatusModel_idx` ON `CosmosManager`.`TaskStatus` (`taskStatusModel` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Milestone` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Milestone` (
  `idMilestone` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `Description` TEXT NULL,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `beginDate` DATE NULL,
  `dueDate` DATE NULL,
  `estimatedTime` INT UNSIGNED NULL,
  `achived` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `closed` TINYINT(1) UNSIGNED NOT NULL,
  `project` INT NOT NULL,
  `taskStatusModel` INT NOT NULL,
  PRIMARY KEY (`idMilestone`),
  CONSTRAINT `fk_Milestone_Project`
    FOREIGN KEY (`project`)
    REFERENCES `CosmosManager`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Milestone_TaskStatusModel1`
    FOREIGN KEY (`taskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Milestone_Project_idx` ON `CosmosManager`.`Milestone` (`project` ASC) VISIBLE;

CREATE INDEX `fk_Milestone_TaskStatusModel_idx` ON `CosmosManager`.`Milestone` (`taskStatusModel` ASC) VISIBLE;

CREATE INDEX `milestone_project_creation_date` ON `CosmosManager`.`Milestone` (`project` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `milestone_project_begin_date` ON `CosmosManager`.`Milestone` (`project` ASC, `beginDate` ASC) VISIBLE;

CREATE INDEX `milestone_project_due_date` ON `CosmosManager`.`Milestone` (`project` ASC, `dueDate` ASC) VISIBLE;

CREATE INDEX `milestone_project_achived` ON `CosmosManager`.`Milestone` (`project` ASC, `achived` ASC) VISIBLE;

CREATE INDEX `milestone_project_closed` ON `CosmosManager`.`Milestone` (`project` ASC, `closed` ASC) VISIBLE;

CREATE UNIQUE INDEX `milestone_project_name_UNIQUE` ON `CosmosManager`.`Milestone` (`project` ASC, `name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`Task`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`Task` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`Task` (
  `idTask` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `priority` TINYINT(4) NOT NULL DEFAULT 0,
  `creationDate` DATETIME NOT NULL DEFAULT now(),
  `beginDate` DATE NULL,
  `dueDate` DATE NULL,
  `estimatedTime` INT UNSIGNED NULL,
  `closed` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `taskStatus` INT NOT NULL,
  `taskStatusModel` INT NOT NULL,
  `milestone` INT NOT NULL,
  PRIMARY KEY (`idTask`),
  CONSTRAINT `fk_Task_TaskStatus`
    FOREIGN KEY (`taskStatus`)
    REFERENCES `CosmosManager`.`TaskStatus` (`idTaskStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Task_TaskStatusModel`
    FOREIGN KEY (`taskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Task_Milestone`
    FOREIGN KEY (`milestone`)
    REFERENCES `CosmosManager`.`Milestone` (`idMilestone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Task_TaskStatus_idx` ON `CosmosManager`.`Task` (`taskStatus` ASC) VISIBLE;

CREATE INDEX `fk_Task_TaskStatusModel_idx` ON `CosmosManager`.`Task` (`taskStatusModel` ASC) VISIBLE;

CREATE INDEX `fk_Task_Milestone_idx` ON `CosmosManager`.`Task` (`milestone` ASC) VISIBLE;

CREATE UNIQUE INDEX `task_milestone_title_UNIQUE` ON `CosmosManager`.`Task` (`milestone` ASC, `title` ASC) VISIBLE;

CREATE INDEX `task_milestone_priority_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `priority` ASC) VISIBLE;

CREATE INDEX `task_milestone_creation_date_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `creationDate` ASC) VISIBLE;

CREATE INDEX `task_milestone_begin_date_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `beginDate` ASC) VISIBLE;

CREATE INDEX `task_milestone_due_date_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `dueDate` ASC) VISIBLE;

CREATE INDEX `task_milestone_estimated_time_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `estimatedTime` ASC) VISIBLE;

CREATE INDEX `task_milestone_closed_idx` ON `CosmosManager`.`Task` (`milestone` ASC, `closed` ASC) VISIBLE;

CREATE INDEX `task_milestone_status` ON `CosmosManager`.`Task` (`milestone` ASC, `taskStatus` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`TaskAssociatedFiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TaskAssociatedFiles` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TaskAssociatedFiles` (
  `idTask` INT NOT NULL,
  `idFile` INT NOT NULL,
  PRIMARY KEY (`idTask`, `idFile`),
  CONSTRAINT `fk_Task_Associated_Files_Task`
    FOREIGN KEY (`idTask`)
    REFERENCES `CosmosManager`.`Task` (`idTask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Task_Associated_Files_File`
    FOREIGN KEY (`idFile`)
    REFERENCES `CosmosManager`.`File` (`idFile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Task_Associated_Files_File_idx` ON `CosmosManager`.`TaskAssociatedFiles` (`idFile` ASC) VISIBLE;

CREATE INDEX `fk_Task_Associated_Files_Task_idx` ON `CosmosManager`.`TaskAssociatedFiles` (`idTask` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`TaskStatusModelTaskStatusList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TaskStatusModelTaskStatusList` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TaskStatusModelTaskStatusList` (
  `idTaskStatusModel` INT NOT NULL,
  `idTaskStatus` INT NOT NULL,
  PRIMARY KEY (`idTaskStatusModel`, `idTaskStatus`),
  CONSTRAINT `fk_Task_Status_Model_Task_Status_List_TaskStatusModel`
    FOREIGN KEY (`idTaskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Task_Status_Model_Task_Status_List_TaskStatus`
    FOREIGN KEY (`idTaskStatus`)
    REFERENCES `CosmosManager`.`TaskStatus` (`idTaskStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Task_Status_Model_Task_Status_List_TaskStatus_idx` ON `CosmosManager`.`TaskStatusModelTaskStatusList` (`idTaskStatus` ASC) VISIBLE;

CREATE INDEX `fk_Task_Status_Model_Task_Status_List_TaskStatusModel_idx` ON `CosmosManager`.`TaskStatusModelTaskStatusList` (`idTaskStatusModel` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`TaskAssignedUsers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`TaskAssignedUsers` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`TaskAssignedUsers` (
  `idTask` INT NOT NULL,
  `idUser` INT NOT NULL,
  PRIMARY KEY (`idTask`, `idUser`),
  CONSTRAINT `fk_TaskAssignedUsers_Task`
    FOREIGN KEY (`idTask`)
    REFERENCES `CosmosManager`.`Task` (`idTask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TaskAssignedUsers_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `CosmosManager`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_TaskAssignedUsers_User_idx` ON `CosmosManager`.`TaskAssignedUsers` (`idUser` ASC) VISIBLE;

CREATE INDEX `fk_TaskAssignedUsers_Task_idx` ON `CosmosManager`.`TaskAssignedUsers` (`idTask` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`DeliveryAssociatedMilestones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`DeliveryAssociatedMilestones` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`DeliveryAssociatedMilestones` (
  `idDelivery` INT NOT NULL,
  `idMilestone` INT NOT NULL,
  PRIMARY KEY (`idDelivery`, `idMilestone`),
  CONSTRAINT `fk_Delivery_Associated_Milestones_Delivery`
    FOREIGN KEY (`idDelivery`)
    REFERENCES `CosmosManager`.`Delivery` (`idDelivery`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Delivery_Associated_Milestones_Milestone`
    FOREIGN KEY (`idMilestone`)
    REFERENCES `CosmosManager`.`Milestone` (`idMilestone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Delivery_Associated_Milestones_Milestone_idx` ON `CosmosManager`.`DeliveryAssociatedMilestones` (`idMilestone` ASC) VISIBLE;

CREATE INDEX `fk_Delivery_Associated_Milestones_Delivery_idx` ON `CosmosManager`.`DeliveryAssociatedMilestones` (`idDelivery` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`ProjectAssociatedTeam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`ProjectAssociatedTeam` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`ProjectAssociatedTeam` (
  `idProject` INT NOT NULL,
  `idTeam` INT NOT NULL,
  PRIMARY KEY (`idProject`, `idTeam`),
  CONSTRAINT `fk_Project_Associated_Team_Project`
    FOREIGN KEY (`idProject`)
    REFERENCES `CosmosManager`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_Associated_Team_Team`
    FOREIGN KEY (`idTeam`)
    REFERENCES `CosmosManager`.`Team` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Project_Associated_Team_Team_idx` ON `CosmosManager`.`ProjectAssociatedTeam` (`idTeam` ASC) VISIBLE;

CREATE INDEX `fk_Project_Associated_Team_Project_idx` ON `CosmosManager`.`ProjectAssociatedTeam` (`idProject` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `CosmosManager`.`WorkspaceCustomTaskStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CosmosManager`.`WorkspaceCustomTaskStatus` ;

CREATE TABLE IF NOT EXISTS `CosmosManager`.`WorkspaceCustomTaskStatus` (
  `idWorkspace` INT NOT NULL,
  `idTaskStatusModel` INT NOT NULL,
  PRIMARY KEY (`idWorkspace`, `idTaskStatusModel`),
  CONSTRAINT `fk_Workspace_Custom_Task_Status_Workspace`
    FOREIGN KEY (`idWorkspace`)
    REFERENCES `CosmosManager`.`Workspace` (`idWorkspace`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Workspace_Custom_Task_Status_TaskStatusModel`
    FOREIGN KEY (`idTaskStatusModel`)
    REFERENCES `CosmosManager`.`TaskStatusModel` (`idTaskStatusModel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_Workspace_Custom_Task_Status_TaskStatusModel_idx` ON `CosmosManager`.`WorkspaceCustomTaskStatus` (`idTaskStatusModel` ASC) VISIBLE;

CREATE INDEX `fk_Workspace_Custom_Task_Status_Workspace_idx` ON `CosmosManager`.`WorkspaceCustomTaskStatus` (`idWorkspace` ASC) VISIBLE;

SET SQL_MODE = '';
DROP USER IF EXISTS 'Administrator'@'%';
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'Administrator'@'%' IDENTIFIED BY 'mpfzsz0vxxmwz26s2Mcsp53';

GRANT ALL ON CosmosManager.* TO 'Administrator'@'%';
GRANT ALL ON TABLE CosmosManager.* TO 'Administrator'@'%';
SET SQL_MODE = '';
DROP USER IF EXISTS 'SpringBackend'@'%';
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'SpringBackend'@'%' IDENTIFIED BY 'x4yRnjVQIj5DLpiUDZuNnAi';

GRANT UPDATE, SELECT, INSERT, DELETE ON TABLE CosmosManager.* TO 'SpringBackend'@'%';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
